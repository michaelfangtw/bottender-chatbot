"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const omit_1 = __importDefault(require("lodash/omit"));
const url_join_1 = __importDefault(require("url-join"));
const debugRequest = debug_1.default('messaging-api:request');
function defaultOnRequest(request) {
    if (request.body) {
        debugRequest('Outgoing request body:');
        if (Buffer.isBuffer(request.body)) {
            debugRequest(request.body);
        }
        else {
            debugRequest(JSON.stringify(request.body, null, 2));
        }
    }
}
exports.onRequest = defaultOnRequest;
function createRequestInterceptor({ onRequest = defaultOnRequest, } = {}) {
    return (config) => {
        onRequest({
            method: config.method,
            url: url_join_1.default(config.baseURL || '', config.url || '/'),
            headers: Object.assign(Object.assign(Object.assign({}, config.headers.common), (config.method ? config.headers[config.method] : {})), omit_1.default(config.headers, [
                'common',
                'get',
                'post',
                'put',
                'patch',
                'delete',
                'head',
            ])),
            body: config.data,
        });
        return config;
    };
}
exports.createRequestInterceptor = createRequestInterceptor;
__export(require("./case"));
//# sourceMappingURL=index.js.map