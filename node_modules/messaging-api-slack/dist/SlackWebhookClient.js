"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const messaging_api_common_1 = require("messaging-api-common");
class SlackWebhookClient {
    constructor(urlOrConfig) {
        let url;
        if (urlOrConfig && typeof urlOrConfig === 'object') {
            const config = urlOrConfig;
            url = config.url;
            this._onRequest = config.onRequest;
        }
        else {
            url = urlOrConfig;
        }
        // incoming webhooks
        // https://api.slack.com/incoming-webhooks
        this._axios = axios_1.default.create({
            baseURL: url,
            headers: { 'Content-Type': 'application/json' },
        });
        this._axios.interceptors.request.use(messaging_api_common_1.createRequestInterceptor({ onRequest: this._onRequest }));
    }
    static connect(urlOrConfig) {
        return new SlackWebhookClient(urlOrConfig);
    }
    get axios() {
        return this._axios;
    }
    sendRawBody(body) {
        return this._axios.post('', messaging_api_common_1.snakecaseKeysDeep(body)).then(res => res.data);
    }
    sendText(text) {
        return this.sendRawBody({ text });
    }
    /**
     * Attachments
     *
     * https://api.slack.com/docs/message-attachments
     */
    sendAttachments(attachments) {
        return this.sendRawBody({ attachments });
    }
    sendAttachment(attachment) {
        return this.sendAttachments([attachment]);
    }
}
exports.default = SlackWebhookClient;
//# sourceMappingURL=SlackWebhookClient.js.map