import { AxiosInstance } from 'axios';
import { OnRequestFunction } from 'messaging-api-common';
import * as Types from './SlackTypes';
interface ClientConfig {
    url: string;
    onRequest?: OnRequestFunction;
}
export default class SlackWebhookClient {
    _axios: AxiosInstance;
    _onRequest: OnRequestFunction | undefined;
    static connect(urlOrConfig: string | ClientConfig): SlackWebhookClient;
    constructor(urlOrConfig: string | ClientConfig);
    get axios(): AxiosInstance;
    sendRawBody(body: Record<string, any>): Promise<Types.SendMessageSuccessResponse>;
    sendText(text: string): Promise<Types.SendMessageSuccessResponse>;
    /**
     * Attachments
     *
     * https://api.slack.com/docs/message-attachments
     */
    sendAttachments(attachments: Types.Attachment[]): Promise<Types.SendMessageSuccessResponse>;
    sendAttachment(attachment: Types.Attachment): Promise<Types.SendMessageSuccessResponse>;
}
export {};
//# sourceMappingURL=SlackWebhookClient.d.ts.map